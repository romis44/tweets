{"version":3,"file":"static/js/696.ec2568ed.chunk.js","mappings":"4NAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,KAAjB,EAEnBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,OAAOG,SAAjB,ECDpC,EAA0B,2BAA1B,EAA6D,yBAA7D,EAA6F,wBAA7F,EAA6H,yBAA7H,EAA4J,uBAA5J,EAA4L,+C,SCE/KC,EAAY,SAAC,GAOnB,IANLC,EAMI,EANJA,GACAC,EAKI,EALJA,KACAC,EAII,EAJJA,OACAP,EAGI,EAHJA,OACAQ,EAEI,EAFJA,UACAC,EACI,EADJA,YAEMC,GAAWC,EAAAA,EAAAA,MAYjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAaC,IAAKP,EAAQQ,IAAKT,KAE/C,iBAAKM,UAAWC,EAAhB,WACE,eAAGD,UAAWC,EAAd,UAA4Bb,EAAOgB,eAAe,SAAlD,cACA,eAAGJ,UAAWC,EAAd,UACGL,EAAUQ,eAAe,SAD5B,oBAKF,mBACEJ,UAAWH,EAAcI,EAAeA,EACxCI,KAAK,SACLC,QAxBe,WACnBR,GACES,EAAAA,EAAAA,GACEV,EACI,CAAEJ,GAAAA,EAAIG,UAAWA,EAAY,EAAGC,aAAa,GAC7C,CAAEJ,GAAAA,EAAIG,UAAWA,EAAY,EAAGC,aAAa,IAGtD,EAaG,SAKGA,EAAc,YAAc,aAIpC,EC1CD,EAAuB,yBAAvB,EAAuD,yBAAvD,EAAsF,wB,UCAtF,EAA0B,wBCEbW,EAAS,WACpB,OACE,gBAAKR,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEQ,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,cACVC,aAAc,CAAC,EACfC,aAAa,iBAIpB,E,SCJYC,EAAa,WACxB,IAAM3B,GAAS4B,EAAAA,EAAAA,IAAY9B,GAC3B,GAAwB+B,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACM5B,GAAYyB,EAAAA,EAAAA,IAAY1B,GAExB8B,EAAgBhC,EAAOiC,MAAM,EAPd,EAOiBH,GAChCI,EARe,EAQEJ,GAAyB9B,EAAOmC,OAKvD,OACE,iCACE,eAAIvB,UAAWwB,EAAf,SACGJ,EAAcK,KAAI,gBAAGhC,EAAH,EAAGA,GAAOiC,GAAV,mBACjB,eAAI1B,UAAWwB,EAAf,UACE,SAAChC,GAAD,QAAWC,GAAIA,GAAQiC,KADKjC,EADb,MAMpBF,IAAa,SAACiB,EAAD,IACbc,EAAiB,MAChB,oBAAQtB,UAAWwB,EAASnB,KAAK,SAASC,QAdzB,WACrBa,GAAQ,SAAAQ,GAAS,OAAIA,EAAY,CAAhB,GAClB,EAYK,uBAEE,SAAC,MAAD,SAKT,E,UCxCD,EAAuB,wBCIVC,EAAe,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACjC,OACE,UAAC,KAAD,CAAM9B,UAAWwB,EAAUK,GAAIA,EAA/B,WACE,SAAC,MAAD,IACCC,IAGN,ECOD,EAbe,WACb,IAAMhC,GAAWC,EAAAA,EAAAA,MAIjB,OAHAgC,EAAAA,EAAAA,YAAU,WACRjC,GAASkC,EAAAA,EAAAA,KACV,GAAE,CAAClC,KAEF,6BACE,SAAC8B,EAAD,CAAcC,GAAG,IAAjB,mBACA,SAACd,EAAD,MAGL,C","sources":["redux/selectors.js","webpack://tweets/./src/components/TweetCard/TweetCard.module.css?b888","components/TweetCard/TweetCard.jsx","webpack://tweets/./src/components/TweetsList/TweetsList.module.css?2ae8","webpack://tweets/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/TweetsList/TweetsList.jsx","webpack://tweets/./src/components/GoBackBtn/GoBackBtn.module.css?e4ec","components/GoBackBtn/GoBackBtn.jsx","pages/Tweets.jsx"],"sourcesContent":["export const selectUsers = state => state.tweets.users;\n\nexport const selectIsLoading = state => state.tweets.isLoading;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TweetCard_wrapper__uEvo0\",\"image\":\"TweetCard_image__FwYDE\",\"info\":\"TweetCard_info__O1FYI\",\"stats\":\"TweetCard_stats__PKEcP\",\"btn\":\"TweetCard_btn__8oMm-\",\"active\":\"TweetCard_active__QXCJ3 TweetCard_btn__8oMm-\"};","import { useDispatch } from 'react-redux';\nimport { followUser } from '../../redux/operations';\nimport style from './TweetCard.module.css';\nexport const TweetCard = ({\n  id,\n  user,\n  avatar,\n  tweets,\n  followers,\n  isFollowing,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleFollow = () => {\n    dispatch(\n      followUser(\n        isFollowing\n          ? { id, followers: followers - 1, isFollowing: false }\n          : { id, followers: followers + 1, isFollowing: true }\n      )\n    );\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <img className={style.image} src={avatar} alt={user} />\n\n      <div className={style.info}>\n        <p className={style.stats}>{tweets.toLocaleString('en-US')} Tweets</p>\n        <p className={style.stats}>\n          {followers.toLocaleString('en-US')} Followers\n        </p>\n      </div>\n\n      <button\n        className={isFollowing ? style.active : style.btn}\n        type=\"button\"\n        onClick={handleFollow}\n      >\n        {isFollowing ? 'Following' : 'Follow'}\n      </button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TweetsList_list__puywo\",\"item\":\"TweetsList_item__QvzDj\",\"btn\":\"TweetsList_btn__hq9B0\"};","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Loader_overlay__vojGq\"};","import { Dna } from 'react-loader-spinner';\nimport style from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={style.overlay}>\n      <Dna\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"dna-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"dna-wrapper\"\n      />\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { BsForwardFill } from 'react-icons/bs';\n\nimport { selectUsers, selectIsLoading } from '../../redux/selectors';\nimport { TweetCard } from '../TweetCard/TweetCard';\nimport css from './TweetsList.module.css';\nimport { Loader } from 'components/Loader/Loader';\n\nconst ITEMS_PER_PAGE = 3;\n\nexport const TweetsList = () => {\n  const tweets = useSelector(selectUsers);\n  const [page, setPage] = useState(1);\n  const isLoading = useSelector(selectIsLoading);\n\n  const tweetsPerPage = tweets.slice(0, page * ITEMS_PER_PAGE);\n  const isButtonHidden = page * ITEMS_PER_PAGE >= tweets.length;\n\n  const handleLoadMore = () => {\n    setPage(prevState => prevState + 1);\n  };\n  return (\n    <>\n      <ul className={css.list}>\n        {tweetsPerPage.map(({ id, ...restProps }) => (\n          <li className={css.item} key={id}>\n            <TweetCard id={id} {...restProps} />\n          </li>\n        ))}\n      </ul>\n      {isLoading && <Loader />}\n      {isButtonHidden ? null : (\n        <button className={css.btn} type=\"button\" onClick={handleLoadMore}>\n          Load More\n          <BsForwardFill />\n        </button>\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"GoBackBtn_link__QcSaa\"};","import { Link } from 'react-router-dom';\nimport { BsReplyFill } from 'react-icons/bs';\n\nimport css from './GoBackBtn.module.css';\n\nexport const GoBackButton = ({ to, children }) => {\n  return (\n    <Link className={css.link} to={to}>\n      <BsReplyFill />\n      {children}\n    </Link>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchUsers } from '../redux/operations';\nimport { TweetsList } from '../components/TweetsList/TweetsList';\nimport { GoBackButton } from '../components/GoBackBtn/GoBackBtn';\n\nconst Tweets = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n  return (\n    <main>\n      <GoBackButton to=\"/\">Back</GoBackButton>\n      <TweetsList />\n    </main>\n  );\n};\n\nexport default Tweets;\n"],"names":["selectUsers","state","tweets","users","selectIsLoading","isLoading","TweetCard","id","user","avatar","followers","isFollowing","dispatch","useDispatch","className","style","src","alt","toLocaleString","type","onClick","followUser","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","TweetsList","useSelector","useState","page","setPage","tweetsPerPage","slice","isButtonHidden","length","css","map","restProps","prevState","GoBackButton","to","children","useEffect","fetchUsers"],"sourceRoot":""}